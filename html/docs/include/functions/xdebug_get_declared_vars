= xdebug_get_declared_vars
Returns declared variables
array
none
FUNC_STACK_TRACE

TXT:
Returns an array where each element is a variable name which is defined in the
current scope. The setting [CFG:collect_vars] needs to be enabled.

EXAMPLE: 
<?php
    class strings {
        static function fix_strings($a, $b) {
            foreach ($b as $item) {
            }
            var_dump(xdebug_get_declared_vars());
        }
    }
    strings::fix_strings(array(1,2,3), array(4,5,6));
?>

RESULT:
<b>array</b>
  0 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'a'</font> <i>(length=1)</i>
  1 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'b'</font> <i>(length=1)</i>
  2 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'item'</font> <i>(length=4)</i>

TXT:
In PHP versions before 5.1, the variable name "a" is not in the returned array,
as it is not used in the scope where the function xdebug_get_declared_vars() is
called in.
